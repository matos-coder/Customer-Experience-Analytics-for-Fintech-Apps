import pandas as pd
import cx_Oracle
import os

# Load cleaned data
DATA_PATH = os.path.join('notebooks', 'data', 'processed', 'review_analysis.csv')
df = pd.read_csv(DATA_PATH)

# Oracle connection details
ORACLE_USER = 'SYS'
ORACLE_PASSWORD = 'P@ssw0rd'
ORACLE_DSN = cx_Oracle.makedsn('localhost', 1521, service_name='XEPDB1')

# Connect to Oracle
conn = cx_Oracle.connect(user=ORACLE_USER, password=ORACLE_PASSWORD, dsn=ORACLE_DSN, mode=cx_Oracle.SYSDBA)
cur = conn.cursor()

# Create tables if not exist
def create_tables():
    cur.execute('''
    BEGIN
        EXECUTE IMMEDIATE 'CREATE TABLE banks (
            bank_id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
            bank_name VARCHAR2(100) NOT NULL UNIQUE
        )';
    EXCEPTION WHEN OTHERS THEN IF SQLCODE != -955 THEN RAISE; END IF; END;
    ''')
    cur.execute('''
    BEGIN
        EXECUTE IMMEDIATE 'CREATE TABLE reviews (
            review_id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
            bank_id NUMBER REFERENCES banks(bank_id),
            review_text CLOB,
            review_clean CLOB,
            sentiment_label VARCHAR2(20),
            sentiment_score FLOAT,
            themes VARCHAR2(200),
            review_date VARCHAR2(20)
        )';
    EXCEPTION WHEN OTHERS THEN IF SQLCODE != -955 THEN RAISE; END IF; END;
    ''')
    conn.commit()

# Insert banks and get their IDs
def get_or_create_bank_id(bank):
    cur.execute('SELECT bank_id FROM banks WHERE bank_name = :1', [bank])
    row = cur.fetchone()
    if row:
        return row[0]
    bank_id_var = cur.var(cx_Oracle.NUMBER)
    cur.execute('INSERT INTO banks (bank_name) VALUES (:1) RETURNING bank_id INTO :2', [bank, bank_id_var])
    bank_id = bank_id_var.getvalue()
    conn.commit()
    return bank_id

# Insert reviews
def insert_reviews():
    for _, row in df.iterrows():
        bank_id = get_or_create_bank_id(str(row['bank']))
        cur.execute('''
            INSERT INTO reviews (bank_id, review_text, review_clean, sentiment_label, sentiment_score, themes, review_date)
            VALUES (:1, :2, :3, :4, :5, :6, :7)
        ''', (
            bank_id,
            str(row.get('review', '')),
            str(row.get('review_clean', '')),
            str(row.get('sentiment_label', '')),
            float(row.get('sentiment_score', 0)),
            str(row.get('themes', '')),
            str(row.get('review_date', ''))
        ))
    conn.commit()

if __name__ == '__main__':
    create_tables()
    insert_reviews()
    print('Data inserted successfully.')
    cur.close()
    conn.close()
